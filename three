import java.util.*;

public class LongestTreeArrangement {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        int[] heights = Arrays.stream(sc.nextLine().split(" "))
                              .mapToInt(Integer::parseInt)
                              .toArray();
        System.out.println(longestMountain(heights));
    }

    static int longestMountain(int[] arr) {
        int n = arr.length;
        if (n < 3) return 0;

        int[] inc = new int[n];
        int[] dec = new int[n];

        // Fill increasing sequence info
        for (int i = 1; i < n; i++) {
            if (arr[i] > arr[i - 1])
                inc[i] = inc[i - 1] + 1;
        }

        // Fill decreasing sequence info
        for (int i = n - 2; i >= 0; i--) {
            if (arr[i] > arr[i + 1])
                dec[i] = dec[i + 1] + 1;
        }

        int maxLen = 0;

        for (int i = 1; i < n - 1; i++) {
            if (inc[i] > 0 && dec[i] > 0) {
                int mountainLen = inc[i] + dec[i] + 1;
                maxLen = Math.max(maxLen, mountainLen);
            }
        }

        return maxLen;
    }
}
